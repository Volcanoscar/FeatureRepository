From 79b63437d7651bfa2b78203c4ea5f94fd27983e2 Mon Sep 17 00:00:00 2001
From: moduanke <moduanke@hkzechin.com>
Date: Fri, 4 Mar 2016 11:25:43 +0800
Subject: [PATCH] =?UTF-8?q?[Azumi][=E8=AE=BE=E7=BD=AE][=E5=BC=80=E5=8F=91?=
 =?UTF-8?q?=E8=80=85=E9=80=89=E9=A1=B9]Azumi=20CL=E8=A6=81=E6=B1=82?=
 =?UTF-8?q?=E8=BE=93=E5=85=A5*#35*#=E6=89=93=E5=BC=80=E5=BC=80=E5=8F=91?=
 =?UTF-8?q?=E8=80=85=E9=80=89=E9=A1=B9?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../src/com/android/dialer/ZechinEngineerCode.java |  4 ++
 alps/packages/apps/Settings/AndroidManifest.xml    |  5 ++
 .../com/android/settings/DeviceInfoSettings.java   |  4 +-
 .../android/settings/OpenDeveloperReceiver.java    | 66 ++++++++++++++++++++++
 4 files changed, 77 insertions(+), 2 deletions(-)
 mode change 100644 => 100755 alps/packages/apps/Settings/AndroidManifest.xml
 create mode 100755 alps/packages/apps/Settings/src/com/android/settings/OpenDeveloperReceiver.java

diff --git a/alps/packages/apps/Dialer/src/com/android/dialer/ZechinEngineerCode.java b/alps/packages/apps/Dialer/src/com/android/dialer/ZechinEngineerCode.java
index 463a360..0044d8c 100755
--- a/alps/packages/apps/Dialer/src/com/android/dialer/ZechinEngineerCode.java
+++ b/alps/packages/apps/Dialer/src/com/android/dialer/ZechinEngineerCode.java
@@ -13,6 +13,7 @@ public class ZechinEngineerCode {
 	private final static String ZECHIN_EXTERNAL_VERSION_CMD = "*#37*#";
 	private final static String ZECHIN_FACTORY_MODE_CMD	= "*#28*#";
 	private final static String ZECHIN_INTERNAL_BAND_VERSEION_CMD = "*#*#9527#";
+	private final static String AZUMI_OPEN_DEVELOPER = "*#35*#";
 	public static boolean handleZechinCodeDisplay(Context context,String input){
 		android.util.Log.d("ZECHIN", ">> Enter handleZechinCodeDisplay()<<");
 		if(input.equals(ZECHIN_INTERNAL_VERSEION_CMD)){
@@ -44,6 +45,9 @@ public class ZechinEngineerCode {
 				                    .create();
             dlg.show();
             return true;
+		}else if (input.equals(AZUMI_OPEN_DEVELOPER)) {
+                                 Intent it = new Intent("android.intent.action.opendeveloper");
+                                 context.sendBroadcast(it);
 		}
 		return false;
 	}
diff --git a/alps/packages/apps/Settings/AndroidManifest.xml b/alps/packages/apps/Settings/AndroidManifest.xml
old mode 100644
new mode 100755
index 2d907bc..75209f5
--- a/alps/packages/apps/Settings/AndroidManifest.xml
+++ b/alps/packages/apps/Settings/AndroidManifest.xml
@@ -2889,5 +2889,10 @@
             <meta-data android:name="com.android.settings.TOP_LEVEL_HEADER_ID"
                 android:resource="@id/wifi_settings" />
         </activity>
+	<receiver android:name="com.android.settings.OpenDeveloperReceiver">
+            <intent-filter>  
+               <action android:name="android.intent.action.opendeveloper" />     
+            </intent-filter>
+        </receiver>
     </application>
 </manifest>
diff --git a/alps/packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java b/alps/packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java
index 44438fa..ef7b5c6 100755
--- a/alps/packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java
+++ b/alps/packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java
@@ -244,7 +244,7 @@ public class DeviceInfoSettings extends SettingsPreferenceFragment implements In
                     Log.e(LOG_TAG, "Unable to start activity " + intent.toString());
                 }
             }
-        } else if (preference.getKey().equals(KEY_BUILD_NUMBER)) {
+        } else if (preference.getKey().equals(KEY_BUILD_NUMBER)) {/*
             // Don't enable developer options for secondary users.
             if (UserHandle.myUserId() != UserHandle.USER_OWNER) return true;
 
@@ -291,7 +291,7 @@ public class DeviceInfoSettings extends SettingsPreferenceFragment implements In
                 mDevHitToast = Toast.makeText(getActivity(), R.string.show_dev_already,
                         Toast.LENGTH_LONG);
                 mDevHitToast.show();
-            }
+            }*/
         } else if (preference.getKey().equals(KEY_DEVICE_FEEDBACK)) {
             sendFeedback();
         } else if(preference.getKey().equals(KEY_SYSTEM_UPDATE_SETTINGS)) {
diff --git a/alps/packages/apps/Settings/src/com/android/settings/OpenDeveloperReceiver.java b/alps/packages/apps/Settings/src/com/android/settings/OpenDeveloperReceiver.java
new file mode 100755
index 0000000..f2f77b8
--- /dev/null
+++ b/alps/packages/apps/Settings/src/com/android/settings/OpenDeveloperReceiver.java
@@ -0,0 +1,66 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein
+ * is confidential and proprietary to MediaTek Inc. and/or its licensors.
+ * Without the prior written permission of MediaTek inc. and/or its licensors,
+ * any reproduction, modification, use or disclosure of MediaTek Software,
+ * and information contained herein, in whole or in part, shall be strictly prohibited.
+ */
+/* MediaTek Inc. (C) 2010. All rights reserved.
+ *
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
+ * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+ * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+ * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+ * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
+ * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
+ * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
+ * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
+ * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
+ * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+ * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+ * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
+ * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek Software")
+ * have been modified by MediaTek Inc. All revisions are subject to any receiver's
+ * applicable license agreements with MediaTek Inc.
+ */
+
+package com.android.settings;
+
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.provider.Settings;
+import android.util.Log;
+
+import android.os.ServiceManager;
+import android.os.RemoteException;
+import android.os.IBinder;
+
+
+public class OpenDeveloperReceiver extends BroadcastReceiver {
+    public static  String  TAG = "OpenDeveloperReceiver";
+	
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        String action = intent.getAction();
+        Log.v("RestoreRotationReceiver_IPO", action);
+        if (action.equals("android.intent.action.opendeveloper")) {
+		context.getSharedPreferences(DevelopmentSettings.PREF_FILE,
+		                            Context.MODE_PRIVATE).edit().putBoolean(
+		                                    DevelopmentSettings.PREF_SHOW, true).apply();
+        }
+    } 
+
+
+	
+}
-- 
2.3.7

